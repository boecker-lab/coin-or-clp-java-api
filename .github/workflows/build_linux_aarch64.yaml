name: build_CLP_linux_aarch64


on:
  workflow_dispatch:
env:
  CBC_VERSION: 2.10.12

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache coin-or dependencies
        id: cache-coinor
        uses: actions/cache@v3
        with:
          path:  api/extern/coinor/linuxaarch64/dist
          key: ${{ runner.os }}-${{ runner.arch }}-coinor-cbc-$CBC_VERSION

      - name: build coinor
        working-directory: api/extern/coinor
        if: steps.cache-coinor.outputs.cache-hit != 'true'
        run: |
          export ADD_FFLAGS=-fallow-argument-mismatch
          # export ADD_CXXFLAGS=-lrt # only use if getting the error: "undefined reference to `clock_gettime'"
          ./coinbrew build install Cbc@releases/$CBC_VERSION --parallel-jobs $(nproc) --tests none --prefix linuxaarch64/dist

      - name: build CLPWrapper
        working-directory: api
        run: |
          mkdir build
          cd build
          cmake .. # with -DSTATIC_STD=ON for old glibc versions
          cmake --build . --target install

      - name: CLPTest
        working-directory: api/build/test
        run: ./CLPTest

      - name: checkout cbc-java repository to create PR
        uses: actions/checkout@v4
        with:
          repository: boecker-lab/cbc-java
          path: cbc-java

      - name: move binaries to the right location
        run: |
          cp api/build/native/larm64/* cbc-java/cbc-java-native-linux-arm64/src/main/resources/linux-arm64

      - name: set build version
        id: setversion
        continue-on-error: true
        working-directory: cbc-java
        run: |
          versionline_prev=$(sed -n '/^ *version/ p' build.gradle)
          cbcversion_prev=$(echo $versionline_prev | sed -E 's/.*([0-9]+\.[0-9]+\.[0-9]+)\..*/\1/')
          buildnumber=$(echo $versionline_prev | sed -E 's/.*\.([0-9]+).*/\1/')
          # increase build number if CBC version is unchanged, otherwise reset it
          if [[ "$CBC_VERSION" == "$cbcversion_prev" ]]; then
            ((buildnumber++))
          else
            buildnumber=1
          fi
          # change version
          sed -i -E "s/(^ *version ')[^']+('.*)/\1$CBC_VERSION.$buildnumber\2/" build.gradle

      - name: create PR
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.CBC_JAVA_UPDATE_TOKEN }}
          title: "CLPWrapper update, CBC version ${{ env.CBC_VERSION }}"
          body: "${{ steps.setversion.outcome == 'failure' && 'The build number in build.gradle has to be set manually!' || 'The build number has been automatically increased.' }}"
          branch: "update_clpwrapper_cbc${{ env.CBC_VERSION}}"
          commit-message: "[create-pull-request] ${{ runner.os }} ${{ runner.arch }}: update CLPWrapper and/or dependencies"
          base: main
          path: cbc-java


      # - name: package and upload
      #   working-directory: api/build/native/
      #   run: |
      #     zipfile=clp_cbc-2.10.12.zip
      #     url=https://bio.informatik.uni-jena.de/repository/dist-release-local/de/unijena/bioinf/clp/
      #     if [[ $(curl -Is $url/$zipfile | head -n 1 | grep -c 'OK') -eq 1 ]]; then
      #       curl $url/$zipfile -o $zipfile
      #       zip $zipfile -d 'clp/laarch64/*' || true # delete old binaries
      #     fi
      #     mkdir clp
      #     cp -r laarch64 clp/
      #     # make sure that the rpath is set for all libraries
      #     patchelf --set-rpath '.:$ORIGIN' clp/laarch64/*
      #     zip $zipfile clp/laarch64/* # insert new ones
      #     curl --user '${{ secrets.ARTIFACTORY_USERNAME }}:${{ secrets.ARTIFACTORY_TOKEN }}' -X PUT $url -T $zipfile
