project(CLPWrapper)

find_package(JNI REQUIRED)

add_library(CLPModel STATIC CLPModel.cpp CLPModel.hpp)
add_library(CLPModelWrapper_JNA SHARED CLPModelWrapper_JNA.cpp)
add_library(CLPModelWrapper_JNI SHARED CLPModelWrapper_JNI.cpp)
target_include_directories(CLPModelWrapper_JNI PUBLIC ${JNI_INCLUDE_DIRS})
target_include_directories(CLPModel PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(CLPModel ${CLP_COINUTILS} ${CLP_OSICLP} ${CLP_CLP})
target_link_libraries(CLPModelWrapper_JNA PRIVATE CLPModel)
target_link_libraries(CLPModelWrapper_JNI PRIVATE CLPModel)

# install
set(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/../../src/main/")
set(MAVEN_PATH "resources/de/unijena/bioinf/coin-or-illp-api/native")
if(WINDOWS)
  install (DIRECTORY "${PROJECT_SOURCE_DIR}/../platforms/win" DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}")
  install (TARGETS CLPModel CLPModelWrapper_JNI DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}/win")
elseif(LINUX)
  install (DIRECTORY "${PROJECT_SOURCE_DIR}/../platforms/linux" DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}")
  install (TARGETS CLPModel CLPModelWrapper_JNI DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}/linux")
elseif(MACOS)
  install (DIRECTORY "${PROJECT_SOURCE_DIR}/../platforms/macos" DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}")
  install (TARGETS CLPModel CLPModelWrapper_JNI DESTINATION "${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}/macos")
endif()
